{
  "_args": [
    [
      {
        "raw": "mobx-react-router@^4.0.1",
        "scope": null,
        "escapedName": "mobx-react-router",
        "name": "mobx-react-router",
        "rawSpec": "^4.0.1",
        "spec": ">=4.0.1 <5.0.0",
        "type": "range"
      },
      "/Users/ddancziger/react-app/react-amenity-starter"
    ]
  ],
  "_from": "mobx-react-router@>=4.0.1 <5.0.0",
  "_id": "mobx-react-router@4.0.1",
  "_inCache": true,
  "_location": "/mobx-react-router",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/mobx-react-router-4.0.1.tgz_1491775720096_0.5274632882792503"
  },
  "_npmUser": {
    "name": "alisd23",
    "email": "alisd23@live.co.uk"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mobx-react-router@^4.0.1",
    "scope": null,
    "escapedName": "mobx-react-router",
    "name": "mobx-react-router",
    "rawSpec": "^4.0.1",
    "spec": ">=4.0.1 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mobx-react-router/-/mobx-react-router-4.0.1.tgz",
  "_shasum": "72f67b5c637d187595415500e8afa5cddb2231ab",
  "_shrinkwrap": null,
  "_spec": "mobx-react-router@^4.0.1",
  "_where": "/Users/ddancziger/react-app/react-amenity-starter",
  "author": {
    "name": "Ali Sheehan-Dare - @im_alisd"
  },
  "bugs": {
    "url": "https://github.com/alisd23/mobx-react-router/issues"
  },
  "dependencies": {},
  "description": "Keep your MobX state in sync with react-router",
  "devDependencies": {
    "@types/react-router": "^4.0.2",
    "babel-eslint": "^6.1.2",
    "babel-jest": "^19.0.0",
    "babel-loader": "^6.2.5",
    "babel-plugin-transform-class-properties": "6.11.5",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-polyfill": "^6.13.0",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-1": "^6.13.0",
    "cross-env": "^3.0.0",
    "eslint": "^3.6.0",
    "eslint-config-standard": "^6.0.1",
    "eslint-config-standard-react": "^4.0.2",
    "eslint-plugin-promise": "^2.0.1",
    "eslint-plugin-react": "^6.3.0",
    "eslint-plugin-standard": "^2.0.0",
    "jest": "^19.0.0",
    "mobx": "^3.0.2",
    "mobx-react": "^4.1.0",
    "react": "^15.0.0",
    "react-addons-test-utils": "^15.3.2",
    "react-router": "^4.0.0",
    "react-test-renderer": "^15.3.2",
    "rimraf": "^2.5.4",
    "semantic-release": "^4.3.5",
    "shallowequal": "^0.2.2",
    "typescript": "^2.2.2",
    "webpack": "^2.3.2"
  },
  "directories": {},
  "dist": {
    "shasum": "72f67b5c637d187595415500e8afa5cddb2231ab",
    "tarball": "https://registry.npmjs.org/mobx-react-router/-/mobx-react-router-4.0.1.tgz"
  },
  "gitHead": "e41d5510c21e2f1fa9cc92add258a25fb2b21247",
  "homepage": "https://github.com/alisd23/mobx-react-router#readme",
  "jest": {
    "collectCoverage": true,
    "coverageDirectory": "./__test__/coverage",
    "roots": [
      "__test__"
    ]
  },
  "keywords": [
    "react",
    "react-router",
    "routing",
    "router",
    "mobx",
    "state",
    "store"
  ],
  "license": "MIT",
  "main": "dist/mobx-react-router.js",
  "maintainers": [
    {
      "name": "alisd23",
      "email": "alisd23@live.co.uk"
    }
  ],
  "name": "mobx-react-router",
  "optionalDependencies": {},
  "peerDependencies": {
    "mobx": "^3.0.0",
    "react-router": "4.x"
  },
  "readme": "# mobx-react-router\nKeep your MobX state in sync with react-router via a `RouterStore`.\n\nRouter location state is **observable**, so any references to it in `MobX`\ncomponents will cause the component to re-render when the location changes.\n\nVery much inspired by (and copied from) [react-router-redux](https://github.com/reactjs/react-router-redux/tree/master).\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [API](#api)\n  - [RouterStore](#routerstore)\n  - [syncHistoryWithStore](#synchistorywithstorehistory-store)\n\n\nThis branch (master) is for use with **react-router v4**.\n\nIf you're looking for the bindings for use with react-router `v3` go to [the v3 branch](https://github.com/alisd23/mobx-react-router/tree/v3).\n\n\n## Installation\n\n\n```\nnpm install mobx-react-router --save\n```\n\n## Usage\n\n`index.js`\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport { Provider } from 'mobx-react';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport { Router } from 'react-router';\nimport App from './App';\n\nconst browserHistory = createBrowserHistory();\nconst routingStore = new RouterStore();\n\nconst stores = {\n  // Key can be whatever you want\n  routing: routingStore,\n  // ...other stores\n};\n\nconst history = syncHistoryWithStore(browserHistory, routingStore);\n\nReactDOM.render(\n  <Provider {...stores}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n```\n\n`App.js`\n```js\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n\n@inject('routing')\n@observer\nexport default class App extends Component {\n  render() {\n    const { location, push, goBack } = this.props.routing;\n\n    return (\n      <div>\n        <span>Current pathname: {location.pathname}</span>\n        <button onClick={() => push('/test')}>Change url</button>\n        <button onClick={() => goBack()}>Go Back</button>\n      </div>\n    );\n  }\n}\n```\n\n### Typescript\n\nIf you are using typescript - the built in typings for this project depend on\n`@types/history`, so make sure you have them installed too.\n\n## API\n\n### RouterStore\n\n```js\nconst store = new RouterStore();\n```\n\nA **router store** instance has the following properties:\n\n- `location` (*observable*) - history [location object](https://github.com/mjackson/history#listening)\n- `history` - raw [history API](https://github.com/mjackson/history#properties) object\n\nAnd the following [history methods](https://github.com/mjackson/history#navigation):\n\n- **push(*path*)**\n- **replace(*path*)**\n- **go(*n*)**\n- **goBack()**\n- **goForward()**\n\n### syncHistoryWithStore(*history*, *store*)\n\n- `history` - A variant of a history object, usually `browserHistory`\n- `store` - An instance of `RouterStore`\n\nreturns an *enhanced* history object with the following **additional methods**:\n\n- **subscribe(*listener*)**  \nSubscribes to any changes in the store's `location` observable  \n**Returns** an unsubscribe function which destroys the listener\n```js\nconst unsubscribeFromStore = history.subscribe((location, action) => console.log(location.pathname));\n\nhistory.push('/test1');\nunsubscribeFromStore();\nhistory.push('/test2');\n\n// Logs\n// 'test1'\n```\n\n- **unsubscribe()**  \nUn-syncs the store from the history. The store will **no longer update** when the history changes\n\n```js\nhistory.unsubscribe();\n// Store no longer updates\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alisd23/mobx-react-router.git"
  },
  "scripts": {
    "build": "npm run build:minified && npm run build:unminified",
    "build:minified": "cross-env NODE_ENV=production MINIFY=true webpack --progress --colors",
    "build:unminified": "cross-env NODE_ENV=production webpack --progress --colors",
    "clean": "rimraf dist -f",
    "lint": "eslint src __test__",
    "prepublish": "npm run clean && npm run lint && npm run test && npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "npm run lint && jest",
    "test-watch": "jest --watch"
  },
  "types": "./types.d.ts",
  "version": "4.0.1"
}
